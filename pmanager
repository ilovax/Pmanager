#!/bin/bash

help="[-] usage pmanager [Command] [Args]\n
\nCommands:
\n\t create : create a new radnom password for an account 
\n\t ls : list all accounts
\n\t show : print password of an account
\n\t edit : edit the password of an account
\n\n\t (*) Use pmanager [Command] -h for help menu of the command
"
scripts_folder=scripts

if [ "$#" -eq 0 ]; then
    echo "[-] usage pmanager [Command] [Args] , pmanager --help for more information"

else
	case $1 in
	"--help")
		echo -e $help;;

	"ls")
		python	$scripts_folder/show_all.py;;

	"show")
		if [ "$#" -lt 2 ]; then
			printf "show requires at least one argument\n"
			python $scripts_folder/show.py $2
		elif [ "$#" -eq 2 ]; then
			python $scripts_folder/show.py $2
		else
			shift
			python $scripts_folder/show.py $@
		fi;;
	"edit")
		if [ "$#" -lt 2 ]; then
			printf "edit requires at least one argument\n"
			python $scripts_folder/edit.py $2
		elif [ "$#" -eq 2 ]; then
			python $scripts_folder/edit.py $2
		else
			shift
			python $scripts_folder/edit.py $@
		fi;;
	"create")
		if [ "$#" -lt 2 ]; then
			printf "create requires at least one argument\n"
			python $scripts_folder/create.py $2
		elif [ "$#" -eq 2 ]; then
			python $scripts_folder/create.py $2
		else
			shift
			python $scripts_folder/create.py $@
		fi;;
	"delete")
		if [ "$#" -lt 2 ]; then
			printf "delete requires at least one argument\n"
			python $scripts_folder/delete.py $2
		elif [ "$#" -eq 2 ]; then
			python $scripts_folder/delete.py $2
		else
			shift
			python $scripts_folder/delete.py $@
		fi;;
	*)
		echo "$1 no such command, pmanager --help for more information";;
	esac
fi

